name: C++

on:
  push:
    # paths:
    #  - 'cpp/**'
  pull_request:
    # paths:
    #   - 'cpp/**'

env:
  # ORG: docker.pkg.github.com/${{ github.repository }}
  ORG: kszucs

jobs:

  docker:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - amd64-conda-latest-cpp
          - amd64-debian-10-cpp
          - amd64-ubuntu-16.04-cpp
          - amd64-ubuntu-18.04-cpp
          - amd64-fedora-29-cpp
        include:
          - name: AMD64 Conda C++
            image: amd64-conda-latest-cpp
            platform: conda
            env:
          - name: AMD64 Debian 10 C++
            image: amd64-debian-10-cpp
            service: debian-cpp
            platform: debian
            debian: 10
          - name: AMD64 Ubuntu 16.04 C++
            image: amd64-ubuntu-16.04-cpp
            platform: ubuntu
            ubuntu: 16.04
          - name: AMD64 Ubuntu 18.04 C++
            image: amd64-ubuntu-18.04-cpp
            platform: ubuntu
            ubuntu: 18.04
          - name: AMD64 Fedora 29 C++
            image: amd64-fedora-29-cpp
            platform: fedora
            fedora: 29
    env:
      DEBIAN: ${{ matrix.debian || 10 }}
      UBUNTU: ${{ matrix.ubuntu || 18.04 }}
      FEDORA: ${{ matrix.fedora || 29 }}
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Docker Login
        run: |
          docker login \
            -u ${{ github.actor }} \
            -p ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker Pull
        shell: bash
        run: |
          docker-compose pull --ignore-pull-failures ${{ matrix.platform }}-cpp
      - name: Docker Build
        shell: bash
        run: docker-compose build ${{ matrix.platform }}-cpp
      - name: Docker Push
        shell: bash
        run: docker-compose push ${{ matrix.platform }}-cpp
      - name: Docker Run
        shell: bash
        run: docker-compose run ${{ matrix.platform }}-cpp

  macos:
    name: AMD64 MacOS 10.14 C++
    runs-on: macos-10.14
    strategy:
      fail-fast: false
    env:
      ARROW_JEMALLOC: OFF
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Install Dependencies
        shell: bash
        run: brew bundle --file=cpp/Brewfile
      - name: Build
        shell: bash
        run: ci/scripts/cpp_build.sh $(pwd) $(pwd)/cpp/build /usr/local
      - name: Test
        shell: bash
        run: ci/scripts/cpp_test.sh $(pwd) $(pwd)/cpp/build /usr/local

  windows:
    name: AMD64 ${{ matrix.name }} C++
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2019
          - windows-2016
        include:
          - os: windows-2019
            name: Windows 2019
            generator: Visual Studio 16 2019
          - os: windows-2016
            name: Windows 2016
            generator: Visual Studio 15 2017
    env:
      CMAKE_GENERATOR: ${{ matrix.generator }}
      ARROW_FLIGHT: OFF
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Install Dependencies
        shell: bash
        run: choco install openssl
      - name: Build
        shell: bash
        run: ci/scripts/cpp_build.sh $(pwd) $(pwd)/cpp/build /usr/local
      - name: Test
        shell: bash
        run: ci/scripts/cpp_test.sh $(pwd) $(pwd)/cpp/build /usr/local
