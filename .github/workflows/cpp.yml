name: C++

# TODO: add file patterns with recursive glob **
on:
  - push
  - pull_request

env:
  # ORG: docker.pkg.github.com/${{ github.repository }}
  ORG: kszucs

jobs:

  docker:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build:
          - conda-latest-cpp
          - debian-10-cpp
          - ubuntu-16.04-cpp
          - ubuntu-18.04-cpp
          - fedora-29-cpp
        include:
          - build: conda-latest-cpp
            name: Conda (latest)
            env:
            img: conda
          - service: debian-cpp
            build: debian-10-cpp
            name: Debian (10)
            env: DEBIAN=10
            img: debian
          - build: ubuntu-16.04-cpp
            name: Ubuntu (16.04)
            env: UBUNTU=16.04
            img: ubuntu
          - build: ubuntu-18.04-cpp
            name: Ubuntu (18.04)
            env: UBUNTU=18.04
            img: ubuntu
          - build: fedora-29-cpp
            name: Fedora (29)
            env: FEDORA=29
            img: fedora
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Docker Login
        run: |
          docker login \
            -u ${{ github.actor }} \
            -p ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker Pull
        shell: bash
        run: |
          ${{ matrix.env }} docker-compose pull \
            --ignore-pull-failures \
            ${{ matrix.img }}-cpp
      - name: Docker Build
        shell: bash
        run: ${{ matrix.env }} docker-compose build ${{ matrix.img }}-cpp
      - name: Docker Push
        shell: bash
        run: ${{ matrix.env }} docker-compose push ${{ matrix.img }}-cpp
      - name: Docker Run
        shell: bash
        run: ${{ matrix.env }} docker-compose run ${{ matrix.img }}-cpp
