name: Python

# TODO: add file patterns with recursive glob **
on:
  - push
  - pull_request

env:
  ORG: docker.pkg.github.com/${{ github.repository }}

jobs:

  conda:
    name: Conda
    runs-on: ubuntu-latest
    strategy:
      matrix:
        conda: [latest]
        python: [2.7, 3.6, 3.7]
    env:
      PYTHON: ${{ matrix.python }}
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Diagnostics
        run: |
          docker version
          env
      - name: Docker Login
        run: |
          docker login docker.pkg.github.com \
            -u ${{ github.actor }} \
            -p ${{ secrets.GITHUB_PACKAGES_TOKEN }}
      - name: Docker Pull
        run: |
          docker-compose pull --ignore-pull-failures conda-cpp
          docker-compose pull --ignore-pull-failures conda-python
      - name: Docker Build
        run: |
          docker-compose build conda-cpp
          docker-compose build conda-python
      - name: Docker Run
        run: docker-compose run conda-python
      - name: Docker Push
        run: docker-compose push conda-python

  debian:
    name: Debian
    runs-on: ubuntu-latest
    strategy:
      matrix:
        debian: [10]
        python: [3]
    env:
      DEBIAN: ${{ matrix.debian }}
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Diagnostics
        run: |
          docker version
          env
      - name: Docker Login
        run: |
          docker login docker.pkg.github.com \
            -u ${{ github.actor }} \
            -p ${{ secrets.GITHUB_PACKAGES_TOKEN }}
      - name: Docker Pull
        run: |
          docker-compose pull --ignore-pull-failures debian-cpp
          docker-compose pull --ignore-pull-failures debian-python
      - name: Docker Build
        run: |
          docker-compose build debian-cpp
          docker-compose build debian-python
      - name: Docker Run
        run: docker-compose run debian-python
      - name: Docker Push
        run: docker-compose push debian-python

  ubuntu:
    name: Ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu: [16.04, 18.04]
        python: [3]
    env:
      UBUNTU: ${{ matrix.ubuntu }}
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Diagnostics
        run: |
          docker version
          env
      - name: Docker Login
        run: |
          docker login docker.pkg.github.com \
            -u ${{ github.actor }} \
            -p ${{ secrets.GITHUB_PACKAGES_TOKEN }}
      - name: Docker Pull
        run: |
          docker-compose pull --ignore-pull-failures ubuntu-cpp
          docker-compose pull --ignore-pull-failures ubuntu-python
      - name: Docker Build
        run: |
          docker-compose build ubuntu-cpp
          docker-compose build ubuntu-python
      - name: Docker Run
        run: docker-compose run ubuntu-python
      - name: Docker Push
        run: docker-compose push ubuntu-python

  fedora:
    name: Fedora
    runs-on: ubuntu-latest
    strategy:
      matrix:
        fedora: [29]
        python: [3]
    env:
      FEDORA: ${{ matrix.fedora }}
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Diagnostics
        run: |
          docker version
          env
      - name: Docker Login
        run: |
          docker login docker.pkg.github.com \
            -u ${{ github.actor }} \
            -p ${{ secrets.GITHUB_PACKAGES_TOKEN }}
      - name: Docker Pull
        run: |
          docker-compose pull --ignore-pull-failures fedora-cpp
          docker-compose pull --ignore-pull-failures fedora-python
      - name: Docker Build
        run: |
          docker-compose build fedora-cpp
          docker-compose build fedora-python
      - name: Docker Run
        run: docker-compose run fedora-python
      - name: Docker Push
        run: docker-compose push fedora-python
