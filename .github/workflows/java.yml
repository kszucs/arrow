name: Java

on:
  push:
  #   paths:
  #     - 'java/**'
  pull_request:
  #   paths:
  #     - 'java/**'

env:
  # ORG: docker.pkg.github.com/${{ github.repository }}
  ORG: kszucs

jobs:
  docker:
    name: AMD64 Debian Java JDK ${{ matrix.jdk }} Maven ${{ matrix.maven }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          - amd64-debian-10-java-8-maven-3.5.2
        include:
          - image: amd64-debian-10-java-8-maven-3.5.2
            jdk: 8
            maven: 3.5.2
    env:
      JDK: ${{ matrix.jdk }}
      MAVEN: ${{ matrix.maven }}
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Docker Login
        run: |
          docker login \
            -u ${{ github.actor }} \
            -p ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker Pull
        run: docker-compose pull --ignore-pull-failures debian-java
      - name: Docker Build
        run: docker-compose build debian-java
      - name: Docker Push
        run: docker-compose push debian-java
      - name: Docker Run
        run: docker-compose run debian-java

  macos-windows:
    name: AMD64 ${{ matrix.name }} Java JDK ${{ matrix.jdk }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-10.14
          - windows-2019
        include:
          - os: macos-10.14
            name: MacOS 10.14
            jdk: 8
          - os: windows-2019
            name: Windows 2019
            jdk: 8
    steps:
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.${{ matrix.jdk }}
      - name: Checkout Arrow
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Build
        shell: bash
        run: ci/scripts/java_build.sh $(pwd)
      - name: Test
        shell: bash
        run: ci/scripts/java_test.sh $(pwd)
