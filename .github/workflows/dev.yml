# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Dev

on:
  push:
  pull_request:

jobs:

  release:
    name: Source Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.6'
      - name: Install Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - name: Run Release Test
        shell: bash
        run: |
          ci/scripts/release_test.sh $(pwd)

  docker-lint:
    name: Lint C++, Python, R, Rust, Docker, RAT
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Docker Pull
        run: docker-compose pull --ignore-pull-failures lint
      - name: Docker Build
        run: docker-compose build lint
      - name: Docker Run
        run: docker-compose run lint
      - name: Docker Push
        if: github.event_name == 'push' # && github.ref == 'master'
        shell: bash
        run: |
          docker login \
            -u ${{ secrets.DOCKERHUB_USER }} \
            -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker-compose push lint

  docker-docs:
    name: APIdocs and Sphinx
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Docker Pull
        run: |
          docker-compose pull --ignore-pull-failures conda-cpp
          docker-compose pull --ignore-pull-failures conda-python
          docker-compose pull --ignore-pull-failures conda-docs
      - name: Docker Build
        run: |
          docker-compose build conda-cpp
          docker-compose build conda-python
          docker-compose build conda-docs
      - name: Docker Run
        run: docker-compose run conda-docs
      - name: Docker Push
        if: github.event_name == 'push' # && github.ref == 'master'
        shell: bash
        run: |
          docker login \
            -u ${{ secrets.DOCKERHUB_USER }} \
            -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker-compose push conda-docs

  docker-integration:
    name: Protocol Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: Docker Pull
        run: docker-compose pull --ignore-pull-failures conda-integration
      - name: Docker Build
        run: docker-compose build conda-integration
      - name: Docker Run
        run: docker-compose run conda-integration
      - name: Docker Push
        if: github.event_name == 'push' # && github.ref == 'master'
        shell: bash
        run: |
          docker login \
            -u ${{ secrets.DOCKERHUB_USER }} \
            -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker-compose push conda-integration
