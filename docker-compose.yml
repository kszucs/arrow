# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# The environment variables referenced from this docker-compose can be set by
# defining them before running docker-compose, the defaults are set in .env
# file.
#
# Example:
# $ ARCH=arm64v8 docker-compose build ubuntu-bionic-cpp
# $ ARCH=arm64v8 docker-compose run ubuntu-bionic-cpp

version: '3.5'

# TODO(kszucs): include ARCH to cache as well
volumes:
  conda-latest-cache:
  cuda-10.0-cache:
  debian-10-cache:
  ubuntu-18.04-cache:
  ubuntu-16.04-cache:
  ubuntu-14.04-cache:
  fedora-29-cache:

services:

  ################################# C++ #######################################

  conda-cpp:
    image: ${ORG}/${ARCH}-conda-latest-cpp:latest
    build:
      context: ci
      dockerfile: docker/conda-latest-cpp.dockerfile
      args:
        arch: ${ARCH}
        conda: latest
        prefix: /opt/conda
    volumes: &conda-volumes
      - .:/arrow:delegated
      - conda-latest-cache:/build:delegated
    command: &cpp-command >
      /arrow/ci/scripts/cpp_build.sh /arrow /build /usr/local &&
      /arrow/ci/scripts/cpp_test.sh  /arrow /build /usr/local

  cuda-cpp:
    # only amd64 is supported
    image: ${ORG}/${ARCH}-cuda-${CUDA}-cpp:latest
    build:
      context: ci
      dockerfile: docker/cuda-${CUDA}-cpp.dockerfile
    volumes: &cuda-volumes
      - .:/arrow:delegated
      - cuda-${CUDA}-cache:/build:delegated
    command: *cpp-command

  debian-cpp:
    image: ${ORG}/${ARCH}-debian-${DEBIAN}-cpp:latest
    build:
      context: ci
      dockerfile: docker/debian-${DEBIAN}-cpp.dockerfile
      args:
        arch: ${ARCH}
    volumes: &debian-volumes
      - .:/arrow:delegated
      - debian-${DEBIAN}-cache:/build:delegated
    command: *cpp-command

  ubuntu-cpp:
    # Possible architectures: amd64, arm64v8
    # Possible distros: 18.04, 16.04, 14.04
    image: ${ORG}/${ARCH}-ubuntu-${UBUNTU}-cpp:latest
    build:
      context: ci
      dockerfile: docker/ubuntu-${UBUNTU}-cpp.dockerfile
      args:
        arch: ${ARCH}
    volumes: &ubuntu-volumes
      - .:/arrow:delegated
      - ubuntu-${UBUNTU}-cache:/build:delegated
    command: *cpp-command

  fedora-cpp:
    image: ${ORG}/${ARCH}-fedora-${FEDORA}-cpp:latest
    build:
      context: ci
      dockerfile: docker/fedora-${FEDORA}-cpp.dockerfile
      args:
        arch: ${ARCH}
    volumes: &fedora-volumes
      - .:/arrow:delegated
      - fedora-${FEDORA}-cache:/build:delegated
    command: *cpp-command

  ############################### Python ######################################

  conda-python:
    image: ${ORG}/${ARCH}-conda-latest-python-${PYTHON}:latest
    depends_on:
      - conda-cpp
    build:
      context: ci
      dockerfile: docker/conda-latest-python.dockerfile
      args:
        org: ${ORG}
        arch: ${ARCH}
        conda: latest
        python: ${PYTHON}
        prefix: /opt/conda
    volumes: *conda-volumes
    command: &python-command >
      /bin/bash -c "
        /arrow/ci/scripts/cpp_build.sh /arrow /build /opt/conda &&
        /arrow/ci/scripts/python_build.sh /arrow &&
        /arrow/ci/scripts/python_test.sh /arrow"

  cuda-python:
    image: ${ORG}/${ARCH}-cuda-${CUDA}-python-3:latest
    build:
      context: ci
      dockerfile: docker/linux-apt-python-3.dockerfile
      args:
        base: ${ORG}/${ARCH}-cuda-${CUDA}-cpp:latest
    volumes: *cuda-volumes
    command: *python-command

  debian-python:
    image: ${ORG}/${ARCH}-debian-${DEBIAN}-python-3:latest
    build:
      context: ci
      dockerfile: docker/linux-apt-python-3.dockerfile
      args:
        base: ${ORG}/${ARCH}-debian-${DEBIAN}-cpp:latest
    volumes: *debian-volumes
    command: *python-command

  ubuntu-python:
    image: ${ORG}/${ARCH}-ubuntu-${UBUNTU}-python-3:latest
    build:
      context: ci
      dockerfile: docker/linux-apt-python-3.dockerfile
      args:
        base: ${ORG}/${ARCH}-ubuntu-${UBUNTU}-cpp:latest
    volumes: *ubuntu-volumes
    command: *python-command

  fedora-python:
    image: ${ORG}/${ARCH}-fedora-${FEDORA}-python-3:latest
    build:
      context: ci
      dockerfile: docker/linux-dnf-python-3.dockerfile
      args:
        base: ${ORG}/${ARCH}-fedora-${FEDORA}-cpp:latest
    volumes: *fedora-volumes
    command: *python-command
